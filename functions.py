caracteres = ["a","b","c","f","g","h","i","j","k","l","m","n","ñ","o","p","q","r","s","t","u","v","w","x","y","z",1,2,3,4,5,6,7,8,9,0]

import os, random, time



def generate_password():
    """
    Summary: This function generates a random password

    Returns: Returns the generated password in string format. In case of error, returns an exception
    """
    
    
    password = ""
    
    turn_numbers = input(f"Ingrese la cantidad de caracteres que quiere que tenga su contraseña (Must be less or equal to {len(caracteres)}): ")
    
    if turn_numbers.isdigit():
    
        turn_numbers = int(turn_numbers)
    
    try:
        if turn_numbers <= 35:
            
            for x in range(turn_numbers) :
                        
                    caracter = random.choice(caracteres)
                    
                    caracter = str(caracter)
                    
                    password = password + caracter
                        
            return password
        
        return "Algo salió Mal"
        
    except Exception as e:
        
        return e        
#-------------------------------------------------------------------------------->
def show_passwords(file):
    """Summary: This function shows the passwords previously stored. In case of no passwords stored, this function prints "The file is empty"

    Args:
        file: The file that contains the passwords
    """
    try:
        
        for lines in file.readlines():    
            
            if lines == "":
                
                print("Check if the file is empty.")
                
                break
            
            else:
                print(lines)
                
    except:
        print("Check if the file is empty.")
#-------------------------------------------------------------------------------->
def save_and_print_password(password:str, file):
    """
    Summary: This function saves and prints the password previously generated

    Args:
        Password (str): The password generated by the generate_password() function. 
        Counter (int): This is a counter to see how many passwords have been generated since the app was ejecuted.
    """      
    counter = 0
        
    for lines in file.readlines():
            
            counter += 1
    
    try:
        file.write(f"Password N° {counter + 1} - {password}\n")
            
        print(f"The password generated was {password} and it was saved successfully.")
            
    except:
        
        print("Error, The password could not be saved.")
#------------------------------------------------------------------------------>
def main_menu():
    
    """
    Summary: This function is the main menu

    Returns: In the middle of the function it does not return anything as well, only print the password/s. At the end of the function it returns a value (1/2) wich represents if you want to still using the program or not.
    """
    
    if os.path.exists("pass.txt"):

        file = open("pass.txt","r+",encoding="UTF8")
     
        key = ""
        
        key = input("Welcome, this the main menu of the password generator.\n- Press key number 1 to see all the passwords previously generated.\n- Press 2 to generate a new password.\n- Press 3 to exit the program.")  
        
        while key != "1" and key != "2" and key != "3":
            
            print("Sorry, invalid key")
                    
            time.sleep(2)
            
            key = input("Welcome, this the main menu of the password generator.\n- Press key number 1 to see all the passwords previously generated.\n- Press 2 to generate a new password.\n- Press 3 to exit the program.") 
                        
        if key == "1":
                        
            show_passwords(file)
                    
        elif key == "2":
                        
            password = generate_password()
                        
            save_and_print_password(password,file)
                
        elif key == "3":
            
            print("Thanks for using our program. Have a nice day.")
                       
        still_using_program = input("Press key number 1 to continue using the program or press key number 2 to stop using the program.")
        
        if still_using_program == "1":
                
            return still_using_program
        
        elif still_using_program =="2":
            
            file.close()
            
            return still_using_program
        
            